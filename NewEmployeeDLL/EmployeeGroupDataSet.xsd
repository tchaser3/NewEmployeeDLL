<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="EmployeeGroupDataSet" targetNamespace="http://tempuri.org/EmployeeGroupDataSet.xsd" xmlns:mstns="http://tempuri.org/EmployeeGroupDataSet.xsd" xmlns="http://tempuri.org/EmployeeGroupDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="whsetracConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="whsetracConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.NewEmployeeDLL.Properties.Settings.GlobalReference.Default.whsetracConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="employeegroupTableAdapter" GeneratorDataComponentClassName="employeegroupTableAdapter" Name="employeegroup" UserDataComponentName="employeegroupTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="whsetracConnectionString (Settings)" DbObjectName="whsetrac.dbo.employeegroup" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[employeegroup] WHERE (([GroupID] = @Original_GroupID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[employeegroup] ([GroupID], [GroupName]) VALUES (@GroupID, @GroupName);
SELECT GroupID, GroupName FROM employeegroup WHERE (GroupID = @GroupID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@GroupName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="GroupName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT GroupID, GroupName FROM dbo.employeegroup</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[employeegroup] SET [GroupID] = @GroupID, [GroupName] = @GroupName WHERE (([GroupID] = @Original_GroupID));
SELECT GroupID, GroupName FROM employeegroup WHERE (GroupID = @GroupID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@GroupName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="GroupName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="GroupID" DataSetColumn="GroupID" />
              <Mapping SourceColumn="GroupName" DataSetColumn="GroupName" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="EmployeeGroupDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="EmployeeGroupDataSet" msprop:Generator_UserDSName="EmployeeGroupDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="employeegroup" msprop:Generator_TableClassName="employeegroupDataTable" msprop:Generator_TableVarName="tableemployeegroup" msprop:Generator_TablePropName="employeegroup" msprop:Generator_RowDeletingName="employeegroupRowDeleting" msprop:Generator_RowChangingName="employeegroupRowChanging" msprop:Generator_RowEvHandlerName="employeegroupRowChangeEventHandler" msprop:Generator_RowDeletedName="employeegroupRowDeleted" msprop:Generator_UserTableName="employeegroup" msprop:Generator_RowChangedName="employeegroupRowChanged" msprop:Generator_RowEvArgName="employeegroupRowChangeEvent" msprop:Generator_RowClassName="employeegroupRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="GroupID" msprop:Generator_ColumnVarNameInTable="columnGroupID" msprop:Generator_ColumnPropNameInRow="GroupID" msprop:Generator_ColumnPropNameInTable="GroupIDColumn" msprop:Generator_UserColumnName="GroupID" type="xs:int" />
              <xs:element name="GroupName" msprop:Generator_ColumnVarNameInTable="columnGroupName" msprop:Generator_ColumnPropNameInRow="GroupName" msprop:Generator_ColumnPropNameInTable="GroupNameColumn" msprop:Generator_UserColumnName="GroupName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:employeegroup" />
      <xs:field xpath="mstns:GroupID" />
    </xs:unique>
  </xs:element>
</xs:schema>