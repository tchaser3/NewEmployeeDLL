<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="EmployeeGroupsDataSet" targetNamespace="http://tempuri.org/EmployeeGroupsDataSet.xsd" xmlns:mstns="http://tempuri.org/EmployeeGroupsDataSet.xsd" xmlns="http://tempuri.org/EmployeeGroupsDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="EmployeesConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="EmployeesConnectionString (Settings)" PropertyReference="ApplicationSettings.NewEmployeeDLL.Properties.Settings.GlobalReference.Default.EmployeesConnectionString" Provider="System.Data.OleDb" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="employeegroupsTableAdapter" GeneratorDataComponentClassName="employeegroupsTableAdapter" Name="employeegroups" UserDataComponentName="employeegroupsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EmployeesConnectionString (Settings)" DbObjectName="employeegroups" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `employeegroups` WHERE ((`GroupID` = ?) AND ((? = 1 AND `GroupName` IS NULL) OR (`GroupName` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_GroupID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_GroupName" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="GroupName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_GroupName" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="GroupName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `employeegroups` (`GroupID`, `GroupName`) VALUES (?, ?)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="GroupID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="GroupName" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="GroupName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT GroupID, GroupName FROM employeegroups</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `employeegroups` SET `GroupID` = ?, `GroupName` = ? WHERE ((`GroupID` = ?) AND ((? = 1 AND `GroupName` IS NULL) OR (`GroupName` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="GroupID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="GroupName" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="GroupName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_GroupID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_GroupName" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="GroupName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_GroupName" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="GroupName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="GroupID" DataSetColumn="GroupID" />
              <Mapping SourceColumn="GroupName" DataSetColumn="GroupName" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="EmployeesConnectionString (Settings)" DbObjectName="employeegroups" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FindEmployeeGroupByID" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy1" GeneratorSourceName="FindEmployeeGroupByID" GetMethodModifier="Public" GetMethodName="GetDataBy1" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="FindEmployeeGroupByID">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT GroupID, GroupName
FROM     employeegroups
WHERE  (GroupID = intGroupID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="intGroupID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="EmployeesConnectionString (Settings)" DbObjectName="employeegroups" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FindEmployeeGroupByName" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy" GeneratorSourceName="FindEmployeeGroupByName" GetMethodModifier="Public" GetMethodName="GetDataBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FindEmployeeGroupByName">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT GroupID, GroupName
FROM     employeegroups
WHERE  (GroupName = strGroupName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="strGroupName" Precision="0" Scale="0" Size="0" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="EmployeeGroupsDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="EmployeeGroupsDataSet" msprop:Generator_UserDSName="EmployeeGroupsDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="employeegroups" msprop:Generator_TableClassName="employeegroupsDataTable" msprop:Generator_TableVarName="tableemployeegroups" msprop:Generator_RowChangedName="employeegroupsRowChanged" msprop:Generator_TablePropName="employeegroups" msprop:Generator_RowDeletingName="employeegroupsRowDeleting" msprop:Generator_RowChangingName="employeegroupsRowChanging" msprop:Generator_RowEvHandlerName="employeegroupsRowChangeEventHandler" msprop:Generator_RowDeletedName="employeegroupsRowDeleted" msprop:Generator_RowClassName="employeegroupsRow" msprop:Generator_UserTableName="employeegroups" msprop:Generator_RowEvArgName="employeegroupsRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="GroupID" msprop:Generator_ColumnVarNameInTable="columnGroupID" msprop:Generator_ColumnPropNameInRow="GroupID" msprop:Generator_ColumnPropNameInTable="GroupIDColumn" msprop:Generator_UserColumnName="GroupID" type="xs:int" />
              <xs:element name="GroupName" msprop:Generator_ColumnVarNameInTable="columnGroupName" msprop:Generator_ColumnPropNameInRow="GroupName" msprop:Generator_ColumnPropNameInTable="GroupNameColumn" msprop:Generator_UserColumnName="GroupName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:employeegroups" />
      <xs:field xpath="mstns:GroupID" />
    </xs:unique>
  </xs:element>
</xs:schema>